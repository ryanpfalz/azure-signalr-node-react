name: Integration CI/CD Workflow

on:
    push:
        branches:
            - "NA"
            
env:
    AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
    SIGNALR_CONN_VAR: "democonnectionstring_SIGNALR"
    BROADCAST_FUNCTION_FOLDER: "signalr_broadcastfunction"

jobs:
    # pass data to reusable workflow
    configuration:
        name: "Configuration"
        uses: ./.github/workflows/config.yml

    functionApp:
        name: "Build and Deploy Function App"

        needs: [configuration]
        runs-on: ubuntu-latest
        steps:
            # checkout the repo
            - name: "Checkout Repo"
              uses: actions/checkout@v2

            - name: "Login via Azure CLI"
              uses: azure/login@v1
              with:
                  creds: ${{ secrets.AZURE_SP_CREDENTIALS }}

            - name: Setup Python Environment
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ fromJson(needs.configuration.outputs.variables).functionPythonVersion }}

            - name: "Resolve Project Dependencies - Broadcast Function"
              shell: bash
              run: |
                  pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
                  python -m pip install --upgrade pip
                  pip install -r ./${{ env.BROADCAST_FUNCTION_FOLDER }}/requirements.txt --target=".python_packages/lib/site-packages"
                  popd

            # Function
            - name: "Get Publish Profile"
              shell: pwsh
              run: |
                  $profile = $(az functionapp deployment list-publishing-profiles --name ${{ fromJson(needs.configuration.outputs.variables).functionName }} --resource-group ${{ fromJson(needs.configuration.outputs.variables).resourceGroup }} --xml)
                  echo "broadcastFunctionAppPublishProfile=$profile" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

            - name: "Deploy Broadcast + Negotiate Functions"
              uses: Azure/functions-action@v1
              with:
                  app-name: ${{ fromJson(needs.configuration.outputs.variables).functionName }}
                  package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
                  publish-profile: ${{ env.broadcastFunctionAppPublishProfile }}

            # set connection string in application settings (variable is referenced in ${{ env.BROADCAST_FUNCTION_FOLDER }}/function.json), suppress output
            - name: "Set Function App Settings"
              shell: pwsh
              run: |
                  az functionapp config appsettings set --name ${{ fromJson(needs.configuration.outputs.variables).functionName }} --resource-group ${{ fromJson(needs.configuration.outputs.variables).resourceGroup }} --settings '${{ env.SIGNALR_CONN_VAR }}=${{ secrets.SIGNALR_CONNECTION_STRING }}' >$null
